// Mocks generated by Mockito 5.3.1 from annotations
// in msal_guard/test/guard_router_delegate_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:msal_flutter/msal_flutter.dart' as _i3;
import 'package:msal_guard/msal_guard.dart' as _i5;

import 'guard_router_delegate_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthenticationServiceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationServiceTest extends _i1.Mock
    implements _i2.AuthenticationServiceTest {
  MockAuthenticationServiceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get clientId => (super.noSuchMethod(
        Invocation.getter(#clientId),
        returnValue: '',
      ) as String);
  @override
  set pca(_i3.PublicClientApplication? _pca) => super.noSuchMethod(
        Invocation.setter(
          #pca,
          _pca,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<String> get defaultScopes => (super.noSuchMethod(
        Invocation.getter(#defaultScopes),
        returnValue: <String>[],
      ) as List<String>);
  @override
  set defaultScopes(List<String>? _defaultScopes) => super.noSuchMethod(
        Invocation.setter(
          #defaultScopes,
          _defaultScopes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Stream<_i5.AuthenticationStatus> get authenticationStatus =>
      (super.noSuchMethod(
        Invocation.getter(#authenticationStatus),
        returnValue: _i4.Stream<_i5.AuthenticationStatus>.empty(),
      ) as _i4.Stream<_i5.AuthenticationStatus>);
  @override
  _i4.Future<dynamic> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<String> acquireToken({List<String>? scopes}) =>
      (super.noSuchMethod(
        Invocation.method(
          #acquireToken,
          [],
          {#scopes: scopes},
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> acquireTokenSilently({List<String>? scopes}) =>
      (super.noSuchMethod(
        Invocation.method(
          #acquireTokenSilently,
          [],
          {#scopes: scopes},
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<void> login({String? authorityOverride}) => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
          {#authorityOverride: authorityOverride},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> logout({bool? browserLogout = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
          {#browserLogout: browserLogout},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
